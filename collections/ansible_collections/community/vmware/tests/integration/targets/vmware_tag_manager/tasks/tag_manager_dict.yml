# Test code for the vmware_tag_manager Operations.
# Copyright: (c) 2020, Abhijeet Kasurde <akasurde@redhat.com>
# GNU General Public License v3.0+ (see COPYING or https://www.gnu.org/licenses/gpl-3.0.txt)

# Testcase for https://github.com/ansible/ansible/issues/65765

- name: Create tag with colon in name
  community.vmware.vmware_tag:
    hostname: '{{ vcenter_hostname }}'
    username: '{{ vcenter_username }}'
    password: '{{ vcenter_password }}'
    validate_certs: false
    tag_name: "{{ tag_one }}"
    category_id: "{{ cat_one_id }}"
    state: present
  register: tag_one_create

- name: Check tag is created
  assert:
    that:
      - tag_one_create.changed

- name: Get VM Facts
  community.vmware.vmware_vm_info:
    hostname: '{{ vcenter_hostname }}'
    username: '{{ vcenter_username }}'
    password: '{{ vcenter_password }}'
    validate_certs: false
  register: vm_info

- set_fact:
    vm_name: "{{ vm_info['virtual_machines'][0]['guest_name'] }}"
    vm_moid: "{{ vm_info['virtual_machines'][0]['moid'] }}"

- name: Assign tag to given virtual machine
  community.vmware.vmware_tag_manager:
    hostname: '{{ vcenter_hostname }}'
    username: '{{ vcenter_username }}'
    password: '{{ vcenter_password }}'
    validate_certs: false
    tag_names:
      - category: "{{ cat_one }}"
        tag: "{{ tag_one }}"
    object_name: "{{ vm_name }}"
    object_type: VirtualMachine
    state: add
  register: vm_tag_info

- name: Assign tag to rw_datastore
  community.vmware.vmware_tag_manager:
    hostname: '{{ vcenter_hostname }}'
    username: '{{ vcenter_username }}'
    password: '{{ vcenter_password }}'
    validate_certs: false
    tag_names:
      - category: "{{ cat_one }}"
        tag: "{{ tag_one }}"
    object_name: "{{ rw_datastore }}"
    object_type: Datastore
    state: add
  register: datastore_tag_info

- name: Check if we assigned correct tags
  assert:
    that:
      - vm_tag_info.changed
      - datastore_tag_info.changed

- name: Remove tag to given virtual machine
  community.vmware.vmware_tag_manager:
    hostname: '{{ vcenter_hostname }}'
    username: '{{ vcenter_username }}'
    password: '{{ vcenter_password }}'
    validate_certs: false
    tag_names:
      - category: "{{ cat_one }}"
        tag: "{{ tag_one }}"
    object_name: "{{ vm_name }}"
    object_type: VirtualMachine
    state: remove
  register: vm_tag_info

- name: Test idempotency for state set
  block:
    - name: Set the tags on a VM to a given list
      community.vmware.vmware_tag_manager:
        hostname: '{{ vcenter_hostname }}'
        username: '{{ vcenter_username }}'
        password: '{{ vcenter_password }}'
        validate_certs: false
        tag_names:
          - category: "{{ cat_one }}"
            tag: "{{ tag_one }}"
        object_name: "{{ vm_name }}"
        object_type: VirtualMachine
        state: set
      register: vm_tag_info

    - name: Check the module assigned the tags
      assert:
        that:
          - vm_tag_info.changed

    - name: Set the tags on a VM to a given list again
      community.vmware.vmware_tag_manager:
        hostname: '{{ vcenter_hostname }}'
        username: '{{ vcenter_username }}'
        password: '{{ vcenter_password }}'
        validate_certs: false
        tag_names:
          - category: "{{ cat_one }}"
            tag: "{{ tag_one }}"
        object_name: "{{ vm_name }}"
        object_type: VirtualMachine
        state: set
      register: vm_tag_info

    - name: Check idempotency
      assert:
        that:
          - not vm_tag_info.changed

    - name: Remove tag from given virtual machine
      community.vmware.vmware_tag_manager:
        hostname: '{{ vcenter_hostname }}'
        username: '{{ vcenter_username }}'
        password: '{{ vcenter_password }}'
        validate_certs: false
        tag_names:
          - category: "{{ cat_one }}"
            tag: "{{ tag_one }}"
        object_name: "{{ vm_name }}"
        object_type: VirtualMachine
        state: remove

- name: Assign tag to given virtual machine using moid
  community.vmware.vmware_tag_manager:
    hostname: '{{ vcenter_hostname }}'
    username: '{{ vcenter_username }}'
    password: '{{ vcenter_password }}'
    validate_certs: false
    tag_names:
      - category: "{{ cat_one }}"
        tag: "{{ tag_one }}"
    moid: "{{ vm_moid }}"
    object_type: VirtualMachine
    state: add
  register: vm_tag_info

- name: Check if we assigned correct tags
  assert:
    that:
      - vm_tag_info.changed

- name: Remove tag to datastore
  community.vmware.vmware_tag_manager:
    hostname: '{{ vcenter_hostname }}'
    username: '{{ vcenter_username }}'
    password: '{{ vcenter_password }}'
    validate_certs: false
    tag_names:
      - category: "{{ cat_one }}"
        tag: "{{ tag_one }}"
    object_name: "{{ rw_datastore }}"
    object_type: Datastore
    state: remove
  register: datastore_tag_info

- name: Remove tag to given virtual machine
  community.vmware.vmware_tag_manager:
    hostname: '{{ vcenter_hostname }}'
    username: '{{ vcenter_username }}'
    password: '{{ vcenter_password }}'
    validate_certs: false
    tag_names:
      - category: "{{ cat_one }}"
        tag: "{{ tag_one }}"
    object_name: "{{ vm_name }}"
    object_type: VirtualMachine
    state: remove
  register: vm_tag_info

- name: Check if we removed correct tag
  assert:
    that:
      - vm_tag_info.changed
      - datastore_tag_info.changed
