
---
#asdf
 - name: Stage a VM for decommissioning
   become: false
   hosts: localhost
   gather_facts: true

   #vars:
       #stage_vm: 
       #stage_vm_controller_name:
       #staging_folder: 
       #vsphere_datacenter: 
       #decom_delay: number of days you want the vm to exist in the staging folder and host group


   tasks:
   - name: print all hosts this play is targeting
     debug:
       var: play_hosts
     delegate_to: localhost
     
   
  #  - name: Provide information about vCenter folders
  #    community.vmware.vmware_folder_info:
  #      hostname: '{{ vcenter_hostname }}'
  #      username: '{{ vcenter_username }}'
  #      password: '{{ vcenter_password }}'
  #      datacenter: "{{ vsphere_datacenter }}"
  #      validate_certs: false
  #    delegate_to: localhost
  #    register: vcenter_folder_info

  #  - name: Print vCenter folder info
  #    debug:
  #      var: vcenter_folder_info

   - name: Gather some info from a guest using the vSphere API output schema
     community.vmware.vmware_guest_info:
       hostname: "{{ vcenter_hostname }}"
       username: "{{ vcenter_username }}"
       password: "{{ vcenter_password }}"
       datacenter: "{{ vsphere_datacenter }}"
       name: "{{ stage_vm }}"
       validate_certs: false
       #schema: "vsphere"
       #properties: ["config.hardware.memoryMB", "guest.disk", "overallStatus"]
     delegate_to: localhost
     register: vcenter_guest_info

   - name: Print stage vm info
     debug:
       var: vcenter_guest_info
     delegate_to: localhost

      
   
   - name: Set deletion date
     command: "date +'%d-%m-%Y' -d '+{{ decom_delay }} days'"
     register: deletion_date
     delegate_to: localhost


   - name: Print decomissioning date 
     debug: 
        var: deletion_date.stdout
     delegate_to: localhost
         

   - name: Create a new tag to define stage date (current day) for staged vm
     community.vmware.vmware_tag:
       hostname: '{{ vcenter_hostname }}'
       username: '{{ vcenter_username }}'
       password: '{{ vcenter_password }}'
       category_name: stage-date
       tag_name: "{{ ansible_date_time.date }}"
     delegate_to: localhost

   - name: Create a new tag to define deletion date for staged vm
     community.vmware.vmware_tag:
       hostname: '{{ vcenter_hostname }}'
       username: '{{ vcenter_username }}'
       password: '{{ vcenter_password }}'
       category_name: deletion-date
       validate_certs: false
       tag_name:  "{{ deletion_date.stdout }}"
     delegate_to: localhost
     

   # Be sure to add tag categories for staging and deletion date within vsphere, those tags will be assigned to the vm here (stage-date, deletion-date)
   - name: Assign staging and deletion date tags to vm
     community.vmware.vmware_tag_manager:
       hostname: '{{ vcenter_hostname }}'
       username: '{{ vcenter_username }}'
       password: '{{ vcenter_password }}'
       tag_names:
         #- "{{ category_name }}:{{ tag_name }}"
         - "stage-date:{{ ansible_date_time.date }}"
         - "deletion-date:{{ deletion_date.stdout }}"
       object_name: "{{ stage_vm }}"
       object_type: VirtualMachine
       state: add
       validate_certs: false
     delegate_to: localhost

   - name: Add host to stage-decom inventory group
     awx.awx.group:
        name: decomissioning-stage
        controller_host: "{{ controller_hostname }}"
        controller_username: "{{ controller_username }}"
        controller_password: "{{ controller_password }}"
        inventory: Workshop Inventory
        state: present
        hosts:
          - "{{ stage_vm }}"
        #preserve_existing_hosts: True
        #preserve_existing_children: True
     delegate_to: localhost

   - name: Move to vm to staging folder
     community.vmware.vmware_guest_move:
       hostname: "{{ vcenter_hostname }}"
       username: "{{ vcenter_username }}"
       password: "{{ vcenter_password }}"
       datacenter: "{{ vsphere_datacenter }}"
       name: "{{ stage_vm }}"
       dest_folder: "{{ staging_folder }}" #"/{{ datacenter }}/vm"
       validate_certs: false
     delegate_to: localhost
   

       
